// ++++++++++++++++++++++++ Variables ++++++++++++++++++++++++

// Fonts.
$open_sans: 'Open Sans', sans-serif;
$open_sans_condensed: 'Open Sans Condensed', sans-serif;

$font_awesome: FontAwesome;

// Breakpoints (required by break @mixin).
$large: large;
$desktop: desktop;
$medium: medium;
$neutral: neutral;
$mobile: mobile;
$not-mobile: not-mobile;
$x-small: x-small;

// Colors.
$color_primary: #39414c;
$color_secondary: #000;

$red: #da261d;
$red_light: #f16379;
$green: #7a9378;
$blue: #022859;
$light_blue: #3176bb;
$orange: #ef783d;
$yellow: #ffcc00;
$grey: #868a8b;
$grey_light: #e8e8e8;
$white_light: #f2f2f2;

$color_link: $blue;
$color_hover: lighten($blue, 10%);

// ++++++++++++++++++++++++ Mixins ++++++++++++++++++++++++ */
// Consistent with bootstrap breakpoints.
@mixin break($point) {
	@if $point == 1600 {
		@media (max-width: 1600px) {
			@content;
		}
	}
	@if $point == large {
		@media (max-width: 1329px) {
			@content;
		}
	} @else if $point == desktop {
		@media (min-width: 1330px) {
			@content;
		}
	} @else if $point == medium {
		@media (max-width: 1199px) {
			@content;
		}
	} @else if $point == neutral {
		@media (max-width: 991px) {
			@content;
		}
	} @else if $point == mobile {
		@media (max-width: 767px) {
			@content;
		}
	} @else if $point == not-mobile {
		@media (min-width: 768px) {
			@content;
		}
	} @else if $point == x-small {
		@media (max-width: 479px) {
			@content;
		}
	}
}

// Adds circles via styles(normally on ::before/::after).
@mixin circle($size: 10px, $color: #fff) {
	width: $size;
	height: $size;
	background: $color;
	border-radius: 50%;
	content: '';
	display: inline-block;
}

// Clear floating.
@mixin clearfix() {
	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

// Container width.
@mixin width() {
	//	width: 1310px;
	width: 1180px;
	@include break($large) {
	}
	@include break($medium) {
		width: 950px;
	}
	@include break($neutral) {
		width: 730px;
	}
	@include break($mobile) {
		width: 100%;
	}
}

@mixin font($font_size:14px, $line_height:1.5, $color:$color_primary, $font_weight: 400) {
	font-size: $font_size;
	line-height: $line_height;
	color: $color;
	font-weight: $font_weight;
}

// Link hover effect 1(text overlay).
@mixin hover_text_overlay($color:darken($blue, 10%)) {
	position: relative;
	display: inline-block;
	&::before {
		color: $color;
		content: attr(data-hover);
		position: absolute;
		opacity: 0;
		transform: scale(1.1) translateX(10px) translateY(-10px) rotate(4deg);
		transition: transform 0.3s, opacity 0.3s;
		pointer-events: none;
	}
	&:hover {
		outline: none;
		&::before {
			transform: scale(1) translateX(0px) translateY(0px) rotate(0deg);
			opacity: 1;
		}
	}
}

// Link hover effect 2(underline).
@mixin hover_underline($color:$blue) {
	position: relative;
	&::before {
		content: '';
		position: absolute;
		top: 100%;
		left: 0;
		width: 100%;
		height: 1px;
		background: $color;
		opacity: 0;
		transition: opacity 0.3s, transform 0.3s;
		transform: translateY(-10px);
	}
	&:hover,
	&:focus {
		outline: none;
		&::before {
			opacity: 1;
			transform: translateY(-5px);
		}
	}
}

// ++++++++++++++++++++++++ Animations ++++++++++++++++++++++++ */
//
@keyframes fadeOutText {
	0% {
		color: transparent;
	}
	80% {
		color: transparent;
	}
	100% {
		color: #fff;
	}
}

// Spin animation
.fa-spin {
	-webkit-animation: fa-spin 2s infinite linear;
	animation: fa-spin 2s infinite linear
}

@keyframes fa-spin {
	0% {
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg)
	}
	100% {
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg)
	}
}

@keyframes fillWidth {
	0% {
		width: 0;
	}
	100% {
		width: 100%;
	}
}
